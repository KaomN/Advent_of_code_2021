for (int x = 0; x < 500; x++)
	{
		if (coords[x][0] < coords[x][2] && coords[x][0] != coords[x][3])
			diffx = coords[x][2] - coords[x][0];
		else
			diffx = coords[x][0] - coords[x][2];
		if (coords[x][1] < coords[x][3] && coords[x][1] != coords[x][2])
			diffy = coords[x][3] - coords[x][1];
		else
			diffy = coords[x][1] - coords[x][3];
		// check if x1 == x2
		if (coords[x][0] == coords[x][2])
		{
			if (coords[x][1] < coords[x][3])
				for (int x1 = coords[x][1]; x1 <= coords[x][3]; x1++)
					map[x1][coords[x][0]] += 1;
			else
				for (int x1 = coords[x][3]; x1 <= coords[x][1]; x1++)
					map[x1][coords[x][0]] += 1;
		}
		//check if y1 == y2
		if (coords[x][1] == coords[x][3])
		{
			if (coords[x][0] < coords[x][2])
				for (int x1 = coords[x][0]; x1 <= coords[x][2]; x1++)
					map[coords[x][1]][x1] += 1;
			else
				for (int x1 = coords[x][2]; x1 <= coords[x][0]; x1++)
					map[coords[x][1]][x1] += 1;
		}
		//Check diagonals
		// if (coords[x][0] == coords[x][1] && coords[x][2] == coords[x][3])
		// {
		// 	if (coords[x][0] < coords[x][2])
		// 		for (int x1 = coords[x][0]; x1 <= coords[x][2]; x1++)
		// 			map[x1][x1] += 1;
		// 	else
		// 		for (int x1 = coords[x][2]; x1 <= coords[x][0]; x1++)
		// 			map[x1][x1] += 1;
		// }
		if (coords[x][0] == coords[x][3] && coords[x][1] == coords[x][2])
		{
			if (coords[x][0] < coords[x][1])
			{
				x2 = coords[x][1];
				for (int x1 = coords[x][0]; x1 <= coords[x][1]; x1++)
					map[x1][x2--] += 1;
			}
			else
			{
				x2 = coords[x][0];
				for (int x1 = coords[x][1]; x1 <= coords[x][0]; x1++)
					map[x1][x2--] += 1;
			}
		}
		if (diffx == diffy)
		{
			if (coords[x][0] > coords[x][2] && coords[x][1] > coords[x][3])
			{
				x2 = coords[x][3];
				for (int x1 = coords[x][2]; x1 <= coords[x][0]; x1++)
					map[x2++][x1] += 1;
			}
			else if(coords[x][0] == coords[x][1] && coords[x][2] != coords[x][3] && coords[x][0] < coords[x][2])
			{
				x2 = coords[x][1];
				for (int x1 = coords[x][0]; x1 <= coords[x][2]; x1++)
					map[x2--][x1] += 1;
			}
			else if(coords[x][2] == coords[x][3] && coords[x][1] != coords[x][2] && coords[x][0] > coords[x][2])
			{
				x2 = coords[x][1];
				for (int x1 = coords[x][0]; x1 <= coords[x][2]; x1--)
					map[x1][x2++] += 1;
			}
			else
			{
				x2 = coords[x][1];
				for (int x1 = coords[x][0]; x1 <= coords[x][2]; x1++)
					map[x2++][x1] += 1;
			}
		}
		diffx = 1000;
		diffy = 1001;
	}
	count = 0;
	for (int x = 0; x < 990; x++)
		for (int y = 0; y < 990; y++)
		{
			if (map[x][y] > 1)
			{
				count++;
				//printf("[%d] x = %d, y = %d\n", map[x][y], x, y);
			}
		}